<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0" >
	<!-- 自定义标签的描述 -->
	<description>航大的自定义标签</description>
	<display-name>自定一标签-函数形式</display-name>
	<tlib-version>1.0</tlib-version>
	<!-- 自定义标签的前缀 -->
	<short-name>hd</short-name>
	<!-- 自定义标签的uri如果你采用的JSTL1.2以上的版本 -->
	<uri></uri>
     <!--<%@ taglib prefix="c"  对应上面short-name  uri="http://java.sun.com/jsp/jstl/core" 对应于uri  %>  -->
	<!-- 函数标签  数字，字符串处理，日期处理，使用函数自定义标签    -->
	<function>
		<!-- 标签的描述 -->
		<description>1.将一个字符串转换成大写</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>toUpper</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String toUpper(java.lang.String)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:toUpper("sdfsdfsdfs")}</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>2.将字符串转成日期格式</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>dateFormat</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String dateFormat(java.lang.String,java.lang.String)</function-signature>
		<!--<function-signature>String dateFormat(int,long)</function-signature> 基本数据类型 -->
		<!--<function-signature>String dateFormat(java.lang.Integer,java.lang.Long)</function-signature> 封装数据类型 -->
		<!--<function-signature>String dateFormat(java.util.Date)</function-signature>  -->
		<!--<function-signature>String dateFormat(java.util.List)</function-signature>  -->
		<!--<function-signature>String dateFormat(com.smartlab.User)</function-signature> 也可以为具体类  -->
		<!-- 例子  ${ } el表达式-->
		<example>${hd:dateFormat("2014-12-12 12:12:21","yyyy-mm-dd")}</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>2.日期格式化</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>formateDate</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String formateDate(java.util.Date,java.lang.String)</function-signature>
		<example>${hd:dateFormat("2014-12-12 12:12:21","yyyy-mm-dd")}</example>
	</function>
	
	
	<function>
		<!-- 标签的描述 -->
		<description>3.空判断</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>isEmpty</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>boolean isEmpty(java.lang.String)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:isEmpty(" ")}===true</example>
	</function>
	
	
	<function>
		<!-- 标签的描述 -->
		<description>4.非空判断</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>isNotEmpty</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>boolean isNotEmpty(java.lang.String)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:isNotEmpty(" ")}===false</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>5.日期具体的几秒钟以前(字符串)</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>dateToString</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String dateToString(java.lang.String)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:dateToString("2015-4-25 12:30:00 ")}===1天前</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>6.日期具体的几秒钟以前(日期类型)</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>dateToString2</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String dateToString2(java.util.Date)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:dateToString2("new Date")}===1天前</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>7.数字转具体中文</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>intToChnNumConverter</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String intToChnNumConverter(int)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:intToChnNumConverter(101)}===一百零一</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>8.将每周数字转换为对应中文</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>getWeekChinesee</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String getWeekChinesee(int)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:getWeekChinesee(1)}===一</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>9.将数字转换成对应的字母1==A</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>getCharacter</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>String getCharacter(int)</function-signature>
		<!-- 例子  ${ } el表达式-->
		<example>${hd:getCharacter(1)}===A</example>
	</function>
	
	<function>
		<description>10.截取内容字符串</description>
		<!--标签名称  -->
	    <name>cutContent</name>
	    <!--标签对应的类  -->
	    <function-class>com.smartlab.util.HdFunction</function-class>
	    <!--对应类中方法  -->
	    <function-signature>String cutContent(java.lang.String,int,int)</function-signature>
	    <!-- 例子  ${ } el表达式-->
		<example>${hd:cutContent(1)}</example>
	</function>
	
	<function>
		<description>11.计算文件大小</description>
		<!--标签名称  -->
	    <name>countFileSize</name>
	    <!--标签对应的类  -->
	    <function-class>com.smartlab.util.HdFunction</function-class>
	    <!--对应类中方法  -->
	    <function-signature>long countFileSize(long)</function-signature>
	    <!-- 例子  ${ } el表达式-->
		<example>${hd:countFileSize}</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>12.获取集合的长度</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>getLength</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>int getLength(java.util.List)</function-signature>
		<!-- 例子 -->
		<example>${hd:getLength(resources)}==2</example>
	</function>
	
	<function>
		<!-- 标签的描述 -->
		<description>13.扩展字符串判断的方法</description>
		<!-- 标签名称 :命名规则：简单易懂，方便记忆 -->
		<name>indexOf</name>
		<!-- 标签对应的类 -->
		<function-class>com.smartlab.util.HdFunction</function-class>
		<!-- 类中对应的方法 -->
		<function-signature>int indexOf(java.lang.String ,java.lang.String)</function-signature>
		<!-- 例子 -->
		<example>${hd:indexOf("ccc",'a')}==-1</example>
	</function>
	
	
	
	
	<!--带有格式自定义标签 -->
	<tag>
		<!--标签描述  -->
		<description>查询内容标签</description>
		<!--标签名  名字不能重复-->
		<name>contentTag</name>
		<!--标签对应的类  -->
		<tag-class>com.smartlab.tag.ContentTag</tag-class>
		<!-- 
		JSP:你标签体可以包含jsp代码,支持el表达式，<%=%>, 动作,脚本元素 
		Empty:没有结束标签   hd:contentTag   单标签体
		scriptless: 支持el表达式
		-->
		<!--标签体的数据渲染模式  -->
		<body-content>JSP</body-content>
		<!--定义属性  -->
		<attribute>
			<!--属性名称  -->
		    <name>var</name>
		    <!--这个标签值必填，如果为true，在标签自动提示时候会直接展示出来  -->
		    <required>true</required>
		    <!--告诉你支持el表达式  -->
		    <rtexprvalue>true</rtexprvalue>
		</attribute>
		
		<attribute>
			<!--属性名称  排序方式-->
			<name>sort</name>
			<!--这个标签值必填，如果为true，在标签自动提示时候不会直接展示出来  -->
		    <required>false</required>
		     <!--告诉你支持el表达式  -->
		    <rtexprvalue>true</rtexprvalue>
		</attribute>	
		
		<attribute>
			<!--属性名称  -->
			<name>begin</name>
			<!--这个标签值必填，如果为true，在标签自动提示时候不会直接展示出来  -->
		    <required>false</required>
		     <!--告诉你支持el表达式  -->
		    <rtexprvalue>true</rtexprvalue>
		</attribute>	
		<attribute>
			<!--属性名称  -->
		    <name>end</name>
		    <!--这个标签值必填，如果为true，false在标签自动提示时候不会直接展示出来  -->
		    <required>false</required>
		    <!--告诉你支持el表达式  -->
		    <rtexprvalue>true</rtexprvalue>
		</attribute>		
	</tag>
	
	
	<tag>
		<!--标签描述  -->
		<description>集合迭代标签</description>
		<!--标签名  名字不能重复-->
		<name>loop</name>
		<!--标签对应的类  -->
		<tag-class>com.smartlab.tag.LoopTag</tag-class>
		<!-- 
		JSP:你标签体可以包含jsp代码,支持el表达式，<%=%>, 动作,脚本元素 
		Empty:没有结束标签   hd:contentTag   单标签体
		scriptless: 支持el表达式
		-->
		<!--标签体的数据渲染模式  -->
		<body-content>JSP</body-content>
		<!--定义属性  -->
		<attribute>
			<!--属性名称  -->
		    <name>var</name>
		    <!--这个标签值必填，如果为true，在标签自动提示时候会直接展示出来  -->
		    <required>true</required>
		    <!--告诉你支持el表达式  -->
		    <rtexprvalue>true</rtexprvalue>
		</attribute>
		<!--定义属性  -->
		<attribute>
			<!--属性名称  -->
		    <name>items</name>
		    <!--这个标签值必填，如果为true，在标签自动提示时候会直接展示出来  -->
		    <required>true</required>
		    <!--告诉你支持el表达式  -->
		    <rtexprvalue>true</rtexprvalue>
		</attribute>	
	</tag>
	
	
	<tag>
	 <description>大小写互转</description>
	 <name>upperlower</name>
	 <tag-class>com.smartlab.tag.ToUpperLowerTag</tag-class>
	 <attribute>
	    <name>sort</name>
	    <requered>false</requered>
	    <rtexprvalue>true</rtexprvalue>
	 </attribute>
	 <attribute>
	    <name>content</name>
	    <requered>true</requered>
	    <rtexprvalue>true</rtexprvalue>
	 </attribute>
	 <attribute>
	    <name>var</name>
	    <requered>true</requered>
	    <rtexprvalue>true</rtexprvalue>
	 </attribute>
	</tag>
	
	
	<tag>
	 <description>Loop循环</description>
	 <name>Loopupper</name>
	 <tag-class>com.smartlab.tag.LoopUpperTag</tag-class>
	 <attribute>
	    <name>count</name>
	    <requered>false</requered>
	    <rtexprvalue>true</rtexprvalue>
	 </attribute>
	</tag>
	
	
</taglib>